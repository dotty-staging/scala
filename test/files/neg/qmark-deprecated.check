qmark-deprecated.scala:4: error: using `?` as a type name requires backticks.
class Foo[?] // error
          ^
qmark-deprecated.scala:6: error: using `?` as a type name requires backticks.
class Bar[M[?] <: List[?]] // errors
            ^
qmark-deprecated.scala:10: error: using `?` as a type name requires backticks.
  class ? { val x = 1 } // error
        ^
qmark-deprecated.scala:16: error: using `?` as a type name requires backticks.
  trait ? // error
        ^
qmark-deprecated.scala:22: error: using `?` as a type name requires backticks.
  type ? = Int // error
       ^
qmark-deprecated.scala:33: error: using `?` as a type name requires backticks.
  def bar1[?] = {} // error
           ^
qmark-deprecated.scala:35: error: using `?` as a type name requires backticks.
  def bar3[M[?]] = {} // error
             ^
qmark-deprecated.scala:38: error: using `?` as a type name requires backticks.
  type A[?] = Int // error
         ^
qmark-deprecated.scala:6: warning: Wrap `?` in backticks to continue to use it as an identifier, or use `-Xsource:3` to use it as a wildcard like in Scala 3.
class Bar[M[?] <: List[?]] // errors
                       ^
qmark-deprecated.scala:27: warning: Wrap `?` in backticks to continue to use it as an identifier, or use `-Xsource:3` to use it as a wildcard like in Scala 3.
  val x: Array[?] = new Array[?](0) // errors
               ^
qmark-deprecated.scala:27: warning: Wrap `?` in backticks to continue to use it as an identifier, or use `-Xsource:3` to use it as a wildcard like in Scala 3.
  val x: Array[?] = new Array[?](0) // errors
                              ^
qmark-deprecated.scala:30: warning: Wrap `?` in backticks to continue to use it as an identifier, or use `-Xsource:3` to use it as a wildcard like in Scala 3.
  def foo1[T <: Array[?]](x: T): Array[?] = x // errors
                      ^
qmark-deprecated.scala:30: warning: Wrap `?` in backticks to continue to use it as an identifier, or use `-Xsource:3` to use it as a wildcard like in Scala 3.
  def foo1[T <: Array[?]](x: T): Array[?] = x // errors
                                       ^
5 warnings
8 errors
